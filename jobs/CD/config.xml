<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1415.v4f9c9131248b_">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.3896.vca_2c931e7935">
    <script>pipeline {
    agent {
        node {
            label &apos;appserver&apos; 
        }
    }
    environment {
        ANSIBLE_HOST_KEY_CHECKING = &apos;false&apos;
    }
    stages {
        stage(&apos;Run Ansible Playbook&apos;) {
            steps {
                sh &apos;whoami; cat /etc/hostname&apos;;
				ansiblePlaybook(
                    playbook: &apos;/var/jenkins_home/download.yml&apos;,
                    inventory: &apos;&apos;,
                    colorized: &apos;true&apos;,
                    credentialsId: &apos;agent_ID&apos;
                )
            }
        
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>